#! /bin/sh

set -e

get_interface() {
    for int in wlp5s0 enp0s31f6 lo ; do
        case $(ifconfig $int 2>/dev/null) in
            *)
                echo $int
                break
        esac
    done
}

get_vpn() {
    vpn -i && vpn=" $(vpn -c)"
    printf '%s' "${vpn:-  None}"
}

get_song() {
    song=$(song 2>/dev/null)
    case $song in
        ytsearch*|radio.html)
            song=loading...
    esac
    [ "$song" ] && printf '🎵 %s /' "$song"
}

get_ssid() {
    int=$(get_interface)
    case $int in
        enp0s31f6) 
            ssid='直 Wired' 
            ;;
        wlp5s0)
            if [ -z $(iw dev $int link | grep "Connected") ]; then
                ssid="直 $(iw dev $int link | grep "SSID:" | cut -d " " -f2)"
            fi
            ;;
    esac
    printf '%s' "${ssid:-睊 No Internet}"
}

get_traffic() {
    while read -r line ; do
        set -- $line
    done <<EOF
    $(netstat -c 1 -w 1 -b -I $(get_interface))
EOF
    printf ' %s  %s' \
        "$(printf '%s\n' "$1" | byteconvert)" \
        "$(printf '%s\n' "$2" | byteconvert)"
}

get_mem() {
    max=$(($(sysctl -n hw.physmem) / 1024 / 1024))

    while read -r _ _ line _ ; do
        used=$line
    done <<-EOF
    $(vmstat)
EOF

    printf ' %s' "${used}" #/${max}
}

get_bat() {
     acpi --battery 0 | while read -r line; do
        set -- $line
        ac_state=$(printf "%s" $3 | sed 's/[,]//g')
        bat_val=$(printf "%s" $4 | sed 's/[%,]//g')
        bat_time=$(printf "%s" $5 | sed 's@\(..\):\(..\):\(..\)@\1:\2@')

        case $ac_state in
            "Charging")
                emoji='' ;;
            "Discharging")
                emoji=$(get_bat_emoji $bat_val);;
            "Not")
                bat_val=$(printf "%s" $5 | sed 's/[%,]//g')
                emoji=$(get_bat_emoji $bat_val) ;;
        esac

        if [ $ac_state = "Not" ]; then
            printf "%s %s%%" "$emoji" "$bat_val"
        else
            printf "%s %s%% %s" "$emoji" "$bat_val" "$bat_time"
        fi
    done
}

get_bat_emoji() {
    if [ $1 -gt 80 ] ; then
        emoji=' '
    elif [ $1 -gt 60 ] ; then
        emoji=' '
    elif [ $1 -gt 35 ] ; then
        emoji=' '
    elif [ $1 -gt 10 ] ; then
        emoji=' '
    else
        emoji=' '
    fi

    printf "%s" "$emoji"
}

get_vol() {
    muted=$(pamixer --sink 0 --get-mute)
    vol=$(volume)

    if $muted = true; then
        printf ' %s' "muted"
    else
        printf ' %s%%' "$vol"
    fi
}

get_space() {
    df -h | while read -r line ; do
        case $line in
            */home)
                set -- $line
                printf ' %s' $4
                break
        esac
    done
}

get_date() {
    printf '%s' "$(date "+%a %d %I:%M %p")"
}

print_info() {
    printf '  %s  %s  %s  \n' \
        "$(get_bat)" \
        "$(get_space)" \
        "$(get_date)"
        # "$(get_ssid)" \
        # "$(get_traffic)" \
        # "$(get_mem)" \
}

case $1 in
    -d)
        xsetroot -name "$(print_info)"
        while sleep 30; do
            xsetroot -name "$(print_info)"
        done
        ;;
     *)
         print_info
esac
