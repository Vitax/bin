#!/bin/sh
#
# http://github.com/vitax
#
# Helper script to generate colorscheme headers for suckless tools and various
# other environments
#

set -e

usage() {
    >&2 printf '%s\n' "Usage of ${0##*/}:"
    >&2 printf '\t%s\n' "[-g|--generate] generate all files required for dwm, st, dmenu, xresources and kitty]"
    >&2 printf '\t%s\n' "[-b|--build <st dwm dmenu tabbed>] generate and build suckless tools"
    exit 1
}

# generate a header file for st containing the scheme configuration properties
gen_st() {
cat > ${XDG_CACHE_HOME}/themes/st.h << EOF
const char *colorname[] = {
  [0] = "$color0",
  [1] = "$color1",
  [2] = "$color2",
  [3] = "$color3",
  [4] = "$color4",
  [5] = "$color5",
  [6] = "$color6",
  [7] = "$color7",
  [8]  = "$color8",
  [9]  = "$color9",
  [10] = "$color10",
  [11] = "$color11",
  [12] = "$color12",
  [13] = "$color13",
  [14] = "$color14",
  [15] = "$color15",
  [256] = "$background",
  [257] = "$foreground",
  [258] = "$cursor",
};

unsigned int defaultbg = 256;
unsigned int defaultfg = 257;

unsigned int mousebg = 256;
unsigned int mousefg = 257;

unsigned int defaultcs = 258;
unsigned int defaultrcs = 257;
EOF
}

# generate header file for dwm containing the scheme configuration properties
gen_dwm() {
cat > ${XDG_CACHE_HOME}/themes/dwm.h << EOF
static const char *colors[][3] = {
    [SchemeNorm] = { "$foreground", "$background", "$color8" },
    [SchemeSel]  = { "$foreground", "$color1", "$color3" },
    [SchemeUrg] =  { "$color1", "$background", "$color1" }
};
EOF
}

# generate header file for dmenu containing the scheme configuration properties
gen_dmenu() {
cat > ${XDG_CACHE_HOME}/themes/dmenu.h << EOF
static const char *colors[SchemeLast][2] = {
    [SchemeNorm] = { "$foreground", "$background" },
    [SchemeSel]  = { "$color0", "$color6" },
    [SchemeOut]  = { "$foreground", "$color5" },
};
EOF
}

# generate header file for tabbed containing the scheme configuration properties
gen_tabbed() {
cat > ${XDG_CACHE_HOME}/themes/tabbed.h << EOF
static const char* selfgcolor   = "$foreground";
static const char* selbgcolor   = "$background";
static const char* normfgcolor  = "$foreground";
static const char* normbgcolor  = "$color8";
static const char* urgfgcolor   = "$foreground";
static const char* urgbgcolor   = "$color1";
EOF
}

# extend the local xrescources file with the current selected scheme
gen_xresources() {
    cp -f ${XDG_DOCUMENTS_DIR}/src/dots/.Xresources ${HOME}/.Xresources

cat >> ${HOME}/.Xresources << EOF
*background: $background
*foreground: $foreground

*cursorColor: $cursor

*color0: $color0
*color1: $color1
*color2: $color2
*color3: $color3
*color4: $color4
*color5: $color5
*color6: $color6
*color7: $color7
*color8: $color8
*color9: $color9
*color10: $color10
*color11: $color11
*color12: $color12
*color13: $color13
*color14: $color14
*color15: $color15
EOF
}

# this config file can be used for applications such as kitty
gen_conf() {
cat >> ${XDG_CACHE_HOME}/themes/theme.conf << EOF
background $background
foreground $foreground

cursor $cursor
cursor_text_color $background

color0 $color0
color1 $color1
color2 $color2
color3 $color3
color4 $color4
color5 $color5
color6 $color6
color7 $color7
color8 $color8
color9 $color9
color10 $color10
color11 $color11
color12 $color12
color13 $color13
color14 $color14
color15 $color15
EOF
}

copy_shell_theme() {
    # create folders if not existent
    [ ! -d ${XDG_CACHE_HOME} ] && mkdir ${XDG_CACHE_HOME}
    [ ! -d ${XDG_CACHE_HOME}/themes ] && mkdir ${XDG_CACHE_HOME}/themes

    cp -f ${XDG_DOCUMENTS_DIR}/src/dots/themes/current.sh ${XDG_CACHE_HOME}/themes
}

# rebuild suckless tools
build_suckless() {
    ${XDG_DOCUMENTS_DIR}/src/suckless/build "$@"
}

# generate all files used for ricing
generate() {
    gen_st
    gen_dwm
    gen_tabbed
    gen_dmenu

    gen_xresources
    gen_conf

    copy_shell_theme
}

# reload xresources
reload_xrdb() {
    xrdb ${HOME}/.Xresources
}

# main function
main() {
    # Cleanup or create themes
    mkdir -p ${XDG_CACHE_HOME}/themes

    # source color.sh
    . ${XDG_DOCUMENTS_DIR}/src/dots/themes/current.sh

    case $1 in
        -g|--generate)
            generate
            notify-send "Theme files generated !"
            ;;
        -b|--build)
            generate
            shift
            build_suckless "$@"
            notify-send "Building suckless tools complete! Take according steps
            toapply changes ..."
            ;;
        -h|--help)
            usage
            ;;
        *)
            usage
            ;;
    esac

    reload_xrdb
}

main "$@"
